<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="CommonTypes.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:enum="Enums.xsd" targetNamespace="CommonTypes.xsd" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:import namespace="Enums.xsd" schemaLocation="Enums.xsd"/>
	<xs:complexType name="Element">
		<xs:sequence>
			<xs:element name="AutoContextMenu" type="xs:boolean" minOccurs="0"/>
			<xs:element name="BorderBindings" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Left" type="BorderBinding" minOccurs="0"/>
						<xs:element name="Right" type="BorderBinding" minOccurs="0"/>
						<xs:element name="Top" type="BorderBinding" minOccurs="0"/>
						<xs:element name="Bottom" type="BorderBinding" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ContextMenu" type="xs:string" minOccurs="0"/>
			<xs:element name="Data" type="xs:string" minOccurs="0"/>
			<xs:element name="Enabled" type="xs:boolean" minOccurs="0"/>
			<xs:element name="FirstInGroup" type="xs:boolean" minOccurs="0"/>
			<xs:element name="ModifiesData" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Name" type="xs:string" minOccurs="0"/>
			<xs:element name="Position" type="ElementPosition" minOccurs="0"/>
			<xs:element name="SkipOnInput" type="xs:boolean" minOccurs="0"/>
			<xs:element name="ToolTip" type="xs:string" minOccurs="0"/>
			<xs:element name="Visible" type="xs:boolean" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="Alignment">
		<xs:sequence>
			<xs:element name="GridEnabled" type="xs:boolean" minOccurs="0"/>
			<xs:element name="HorizontalStep" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="LevelLinesEnabled" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Lines" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Line" type="AlignmentLine" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="VerticallStep" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AlignmentLine">
		<xs:sequence>
			<xs:element name="Type" type="enum:AlignmentLineTypes" minOccurs="0"/>
			<xs:element name="Position" type="Position" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Position">
		<xs:sequence>
			<xs:element name="TopLeftX" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TopLeftY" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BottomRightX" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="BottomRightY" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:decimal">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ElementPosition">
		<xs:complexContent>
			<xs:extension base="Position">
				<xs:sequence>
					<xs:element name="TabOrder" minOccurs="0">
						<xs:simpleType>
							<xs:restriction base="xs:decimal">
								<xs:minInclusive value="0"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Attribute">
		<xs:sequence>
			<xs:element name="DateCompound" type="enum:DateCompound" minOccurs="0"/>
			<xs:element name="FillChecking" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Length" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Name" type="xs:string" minOccurs="0"/>
			<xs:element name="Nonnegative" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Precision" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:integer">
						<xs:minInclusive value="0"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Types" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Type" type="enum:DataTypes" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="BorderBinding">
		<xs:attribute name="SizeAnchor" type="xs:string"/>
		<xs:attribute name="SizeAnchorSite" type="enum:BindingSite"/>
		<xs:attribute name="ProportionAnchor" type="xs:string"/>
		<xs:attribute name="ProportionAnchorSite" type="enum:BindingSite"/>
	</xs:complexType>
	<xs:complexType name="Picture">
		<xs:simpleContent>
			<xs:extension base="xs:base64Binary">
				<xs:attribute name="Type" type="enum:PictureTypes"/>
				<xs:attribute name="VariantSet" type="xs:boolean"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="Shortcut">
		<xs:attribute name="Alt" type="xs:boolean"/>
		<xs:attribute name="Ctrl" type="xs:boolean"/>
		<xs:attribute name="Shift" type="xs:boolean"/>
		<xs:attribute name="Key" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="Color">
		<xs:attribute name="ColorType" type="enum:ColorTypes"/>
		<xs:attribute name="Red" type="xs:decimal"/>
		<xs:attribute name="Green" type="xs:decimal"/>
		<xs:attribute name="Blue" type="xs:decimal"/>
	</xs:complexType>
	<xs:complexType name="Font">
		<xs:sequence>
			<xs:element name="Outline" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="Bold" type="xs:boolean"/>
					<xs:attribute name="Strikeout" type="xs:boolean"/>
					<xs:attribute name="Italic" type="xs:boolean"/>
					<xs:attribute name="Underline" type="xs:boolean"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="Type" type="enum:FontTypes"/>
		<xs:attribute name="Name" type="xs:string"/>
		<xs:attribute name="Scale" type="xs:decimal"/>
		<xs:attribute name="Size" type="xs:decimal"/>
	</xs:complexType>
	<xs:complexType name="Border">
		<xs:attribute name="Type">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Absolute"/>
					<xs:enumeration value="StyleItem"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="BorderType">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="WithoutBorder"/>
					<xs:enumeration value="Indented"/>
					<xs:enumeration value="Embossed"/>
					<xs:enumeration value="Double"/>
					<xs:enumeration value="DoubleUnderline"/>
					<xs:enumeration value="Single"/>
					<xs:enumeration value="Underline"/>
					<xs:enumeration value="Rounded"/>
					<xs:enumeration value="Overline"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="Width" type="xs:decimal"/>
	</xs:complexType>
	<xs:complexType name="Decor">
		<xs:sequence>
			<xs:element name="Font" type="Font" minOccurs="0"/>
			<xs:element name="Border" type="Border" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ValueListElement">
		<xs:sequence>
			<xs:element name="Value" type="SimpleTypeValue" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="Presentation" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="ChoisList">
		<xs:sequence>
			<xs:element name="ChoisListElement" type="ValueListElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SimpleTypeValue">
		<xs:attribute name="SimpleType" type="enum:SimpleTypes"/>
		<xs:attribute name="Value" type="xs:anySimpleType"/>
	</xs:complexType>
</xs:schema>
